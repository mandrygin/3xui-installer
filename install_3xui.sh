#!/bin/bash
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ 3X-UI —Å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º –∏ –∞–≤—Ç–æ–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π Xray
# –ê–≤—Ç–æ—Ä: ChatGPT (–¥–ª—è nutson.us)
# =======================================

set -e

echo "üîπ –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É..."
apt update -y && apt upgrade -y

echo "üîπ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
apt install -y curl wget unzip sudo git ufw

echo "üîπ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º 3X-UI..."
bash <(curl -Ls https://raw.githubusercontent.com/mhsanaei/3x-ui/master/install.sh)


echo ""
echo "üîπ –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç—ã..."
ufw allow 22/tcp
ufw allow 443/tcp
ufw allow 2053/tcp
ufw allow 2096/tcp
ufw --force enable

echo ""
echo "üîπ –ó–∞–ø—É—Å–∫–∞–µ–º –∏ –≤–∫–ª—é—á–∞–µ–º x-ui..."
x-ui restart || x-ui start
x-ui enable

echo ""
read -p "–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –¥–ª—è –ø–∞–Ω–µ–ª–∏: " PANEL_USER
read -sp "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –ø–∞–Ω–µ–ª–∏: " PANEL_PASS
echo ""

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–æ—Ä—Ç –ø–∞–Ω–µ–ª–∏
PANEL_PORT=2053

# –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞–Ω–µ–ª–∏
x-ui setting -username "$PANEL_USER" -password "$PANEL_PASS" -port "$PANEL_PORT"

# –ü–æ–ª—É—á–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π IP
IP=$(hostname -I | awk '{print $1}')

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É—Ç—å –ø–∞–Ω–µ–ª–∏
WEBPATH=$(x-ui settings | grep -oP 'webBasePath:\s*\K.*' | tr -d '[:space:]')
if [ -z "$WEBPATH" ]; then
    WEBPATH="/"
fi

echo ""
echo "=========================================="
echo "‚úÖ 3X-UI —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏ –∑–∞–ø—É—â–µ–Ω–∞!"
echo "------------------------------------------"
echo "üåê –í–µ–±-–ø–∞–Ω–µ–ª—å: http://$IP:$PANEL_PORT$WEBPATH"
echo "üë§ –õ–æ–≥–∏–Ω: $PANEL_USER"
echo "üîë –ü–∞—Ä–æ–ª—å: $PANEL_PASS"
echo "------------------------------------------"
echo "–ß—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é –≤—Ä—É—á–Ω—É—é: x-ui"
echo "=========================================="

echo ""
echo "üîπ –ü—Ä–∏–º–µ–Ω—è–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ XRAY..."

cat >/usr/local/x-ui/bin/config.json <<'EOF'
{
  "inbounds": [
    {
      "port": 443,
      "protocol": "vless",
      "settings": {
        "clients": [
          {
            "id": "REPLACE_UUID",
            "level": 0,
            "email": "auto@x-ui.local"
          }
        ],
        "decryption": "none"
      },
      "streamSettings": {
        "network": "tcp",
        "security": "none"
      }
    }
  ],
  "outbounds": [
    { "protocol": "freedom", "tag": "direct" },
    { "protocol": "blackhole", "tag": "block" },
    {
      "protocol": "wireguard",
      "settings": {
        "address": ["172.16.0.2/32"],
        "peers": [
          {
            "publicKey": "bmXOC+F1FxEMF9dyiK2H5Fz3x3o6r8fVq5u4i+L5rHI=",
            "endpoint": "162.159.193.10:2408"
          }
        ],
        "mtu": 1280
      },
      "tag": "warp"
    }
  ],
  "routing": {
    "domainStrategy": "IPIfNonMatch",
    "rules": [
      { "type": "field", "protocol": ["bittorrent"], "outboundTag": "block" },
      { "type": "field", "ip": ["geoip:private"], "outboundTag": "block" },
      { "type": "field", "ip": ["geoip:ru"], "outboundTag": "direct" },
      { "type": "field", "domain": ["geosite:ru"], "outboundTag": "direct" },
      { "type": "field", "domain": ["geosite:google", "geosite:openai", "geosite:meta"], "outboundTag": "warp" }
    ]
  },
  "dns": {
    "servers": ["1.1.1.1", "8.8.8.8"]
  }
}
EOF

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è UUID
UUID=$(cat /proc/sys/kernel/random/uuid)
sed -i "s|REPLACE_UUID|$UUID|g" /usr/local/x-ui/bin/config.json

systemctl restart x-ui
echo ""
echo "‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ XRAY –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!"
echo "üîë UUID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $UUID"
